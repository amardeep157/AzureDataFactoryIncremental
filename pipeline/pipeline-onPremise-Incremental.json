{
	"name": "pipeline-onPremise-Incremental",
	"properties": {
		"activities": [
			{
				"name": "Lookup_Fetch_OldWatermark",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "SELECT TableName,WatermarkValue from dbo.watermarktable",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "SqlServerTable_Fetch_timestamp_watermark",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "copyIncrementalData",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Lookup_Fetch_OldWatermark",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "select * from [Sales].[CustomerTransactions] where LastEditedWhen > '@{activity('Lookup_Fetch_OldWatermark').output.firstRow.WatermarkValue}'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings",
							"copyBehavior": {
								"value": "@CONCAT('Incremental-', pipeline().RunId, '.txt')",
								"type": "Expression"
							}
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SqlServerTable_Source",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "DelimitedTextDataset",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Lookup_Get_MAX_Date",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "copyIncrementalData",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "select MAX(LastEditedWhen) as NewWatermarkvalue from [Sales].[CustomerTransactions]",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "SqlServerTable_Source",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "StoredProc_watermarkTable",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Lookup_Get_MAX_Date",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[usp_update_watermark]",
					"storedProcedureParameters": {
						"LastModifiedtime": {
							"value": {
								"value": "@activity('Lookup_Get_MAX_Date').output.firstRow.NewWatermarkvalue",
								"type": "Expression"
							},
							"type": "Datetime"
						},
						"TableName": {
							"value": {
								"value": "@activity('Lookup_Fetch_OldWatermark').output.firstRow.TableName",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "SqlServerLinkedService",
					"type": "LinkedServiceReference"
				}
			}
		],
		"annotations": [],
		"lastPublishTime": "2020-08-30T11:01:26Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}